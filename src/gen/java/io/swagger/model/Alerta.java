/*
 * Alerta API
 * Esta API provee diferentes servicios para guardar información sobre las distintas alertas y la localización del dispositivo.
 *
 * OpenAPI spec version: 1.0
 * Contact: asistex@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;


import java.util.Objects;


import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.Localizacion;
import java.util.Date;



import javax.validation.constraints.*;




/**
 * Alerta
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaJerseyServerCodegen", date = "2018-11-11T18:01:47.620Z[GMT]")
public class Alerta   {
  
    
      
  
  @JsonProperty("idPersona")
  
  
  
  
  private Long idPersona = null;
  

  
    
      
  
  @JsonProperty("fecha")
  
  
  
  
  private Date fecha = null;
  

  
    
      
  
  @JsonProperty("hora")
  
  
  
  
  private String hora = null;
  

  
    
      
  
  @JsonProperty("localizacion")
  
  
  
  
  private Localizacion localizacion = null;
  

  
  
  
  public Alerta idPersona(Long idPersona) {
    this.idPersona = idPersona;
    return this;
  }
  
  

  
  /**
  
  
   * Get idPersona
  
  
  
   * @return idPersona
   **/
 
  
  @JsonProperty("idPersona")
  
  @ApiModelProperty(value = "")

  public Long getIdPersona() {
    return idPersona;
  }
  

  public void setIdPersona(Long idPersona) {
    this.idPersona = idPersona;
  }
  

  
  
  public Alerta fecha(Date fecha) {
    this.fecha = fecha;
    return this;
  }
  
  

  
  /**
  
  
   * Get fecha
  
  
  
   * @return fecha
   **/
 
  
  @JsonProperty("fecha")
  
  @ApiModelProperty(value = "")

  public Date getFecha() {
    return fecha;
  }
  

  public void setFecha(Date fecha) {
    this.fecha = fecha;
  }
  

  
  
  public Alerta hora(String hora) {
    this.hora = hora;
    return this;
  }
  
  

  
  /**
  
  
   * Get hora
  
  
  
   * @return hora
   **/
 
  
  @JsonProperty("hora")
  
  @ApiModelProperty(example = "19:00", value = "")

  public String getHora() {
    return hora;
  }
  

  public void setHora(String hora) {
    this.hora = hora;
  }
  

  
  
  public Alerta localizacion(Localizacion localizacion) {
    this.localizacion = localizacion;
    return this;
  }
  
  

  
  /**
  
  
   * Get localizacion
  
  
  
   * @return localizacion
   **/
 
  
  @JsonProperty("localizacion")
  
  @ApiModelProperty(value = "")

  public Localizacion getLocalizacion() {
    return localizacion;
  }
  

  public void setLocalizacion(Localizacion localizacion) {
    this.localizacion = localizacion;
  }
  

  


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Alerta alerta = (Alerta) o;
    return Objects.equals(this.idPersona, alerta.idPersona) &&
        Objects.equals(this.fecha, alerta.fecha) &&
        Objects.equals(this.hora, alerta.hora) &&
        Objects.equals(this.localizacion, alerta.localizacion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(idPersona, fecha, hora, localizacion);
  }




  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Alerta {\n");
    
    sb.append("    idPersona: ").append(toIndentedString(idPersona)).append("\n");
    sb.append("    fecha: ").append(toIndentedString(fecha)).append("\n");
    sb.append("    hora: ").append(toIndentedString(hora)).append("\n");
    sb.append("    localizacion: ").append(toIndentedString(localizacion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}



